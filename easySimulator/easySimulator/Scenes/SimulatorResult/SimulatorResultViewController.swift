//
//  SimulatorResultViewController.swift
//  easySimulator
//
//  Created by Tiago Chaves on 23/08/2018.
//  Copyright (c) 2018 easynvest. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SimulatorResultDisplayLogic: class
{
    func displaySimulationResult(viewModel: SimulatorResult.GetSimulationResult.ViewModel)
}

class SimulatorResultViewController: UIViewController, SimulatorResultDisplayLogic
{
    var interactor: SimulatorResultBusinessLogic?
    var router: (NSObjectProtocol & SimulatorResultRoutingLogic & SimulatorResultDataPassing)?
    
    // MARK: - Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: - Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = SimulatorResultInteractor()
        let presenter = SimulatorResultPresenter()
        let router = SimulatorResultRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: - Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: - View lifecycle
    override func viewDidLoad()
    {
        super.viewDidLoad()
        getSimulationResult()
    }
    
    // MARK: - Get Simulation Result
    func getSimulationResult()
    {
        interactor?.getSimulationResult()
    }
    
    //MARK: - Outlets and Actions
    @IBOutlet weak var grossAmountTitleLabel: UILabel!
    @IBOutlet weak var grossAmountProfitTitleLabel: UILabel!
    
    @IBOutlet weak var investedAmountLabel: UILabel!
    @IBOutlet weak var grossAmountLabel: UILabel!
    @IBOutlet weak var grossAmountProfitLabel: UILabel!
    @IBOutlet weak var taxesLabel: UILabel!
    @IBOutlet weak var netAmountLabel: UILabel!
    
    @IBOutlet weak var maturityDateLabel: UILabel!
    @IBOutlet weak var maturityTotalDaysLabel: UILabel!
    @IBOutlet weak var monthlyGrossRateProfitLabel: UILabel!
    @IBOutlet weak var rateLabel: UILabel!
    @IBOutlet weak var annualGrossRateProfitLabel: UILabel!
    @IBOutlet weak var rateProfitLabel: UILabel!
    
    @IBAction func startNewSimulation(_ sender: UIButton) {
        
        
    }
    
    // MARK: - Display Simulation Result
    func displaySimulationResult(viewModel: SimulatorResult.GetSimulationResult.ViewModel)
    {
        
        DispatchQueue.main.async {
            let displayResult = viewModel.displayResult
            
            self.grossAmountTitleLabel.text = displayResult.grossAmount
            self.grossAmountProfitTitleLabel.text = displayResult.grossAmountProfit
            
            self.investedAmountLabel.text = displayResult.investedAmount
            self.grossAmountLabel.text = displayResult.grossAmount
            self.grossAmountProfitLabel.text = displayResult.grossAmountProfit
            self.taxesLabel.text = displayResult.taxesAmount + "(" + displayResult.taxesRate + ")"
            self.netAmountLabel.text = displayResult.netAmount
            
            self.maturityDateLabel.text = displayResult.maturityDate
            self.maturityTotalDaysLabel.text = displayResult.maturityTotalDays
            self.monthlyGrossRateProfitLabel.text = displayResult.monthlyGrossRateProfit
            self.rateLabel.text = displayResult.rate
            self.annualGrossRateProfitLabel.text = displayResult.annualGrossRateProfit
            self.rateProfitLabel.text = displayResult.rateProfit
        }
    }
}
