//
//  SimulatorInputViewController.swift
//  easySimulator
//
//  Created by Tiago Chaves on 22/08/2018.
//  Copyright (c) 2018 easynvest. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SimulatorInputDisplayLogic: class
{
    func displaySimulationResult(viewModel: SimulatorInput.Simulation.ViewModel)
}

class SimulatorInputViewController: UIViewController, SimulatorInputDisplayLogic
{
    var interactor: SimulatorInputBusinessLogic?
    var router: (NSObjectProtocol & SimulatorInputRoutingLogic & SimulatorInputDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = SimulatorInputInteractor()
        let presenter = SimulatorInputPresenter()
        let router = SimulatorInputRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
    }
    
    // MARK: Do something
    
    //@IBOutlet weak var nameTextField: UITextField!
    @IBOutlet weak var investedAmountTextField: UITextField!
    @IBOutlet weak var maturityDateTextField: UITextField!
    @IBOutlet weak var rateTextField: UITextField!
    @IBOutlet weak var simulatingActivityIndicator: UIActivityIndicatorView!
    
    @IBAction func requestSimulation(_ sender: Any) {
        simulate()
    }
    
    func simulate()
    {
        //TODO - Remover os dados fixos e substituir pelos captados no form
        let formatter = DateFormatter()
        formatter.dateFormat = "yyyy/MM/dd"
        guard let someDateTime = formatter.date(from: "2022/10/08") else { return }
        
        let request = SimulatorInput.Simulation.Request(investedAmount: 100.0, rate: 123, maturityDate: someDateTime)
        interactor?.simulate(request: request)
        simulatingActivityIndicator.startAnimating()
    }
    
    func displaySimulationResult(viewModel: SimulatorInput.Simulation.ViewModel)
    {
        simulatingActivityIndicator.stopAnimating()
    }
}
