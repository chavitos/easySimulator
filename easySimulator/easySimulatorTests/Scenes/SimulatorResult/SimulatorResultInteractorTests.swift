//
//  SimulatorResultInteractorTests.swift
//  easySimulator
//
//  Created by Tiago Chaves on 26/08/2018.
//  Copyright (c) 2018 easynvest. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import easySimulator
import XCTest

class SimulatorResultInteractorTests: XCTestCase
{
    // MARK: Subject under test
    
    var sut: SimulatorResultInteractor!
    
    // MARK: Test lifecycle
    
    override func setUp()
    {
        super.setUp()
        setupSimulatorResultInteractor()
    }
    
    override func tearDown()
    {
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupSimulatorResultInteractor()
    {
        sut = SimulatorResultInteractor()
        sut.simulationResult = Seeds.SimulationResults.simulationResult
    }
    
    // MARK: Test doubles
    
    class SimulatorResultPresentationLogicSpy: SimulatorResultPresentationLogic
    {
        var presentSimulationResultCalled = false
        
        func presentSimulationResult(response: SimulatorResult.GetSimulationResult.Response) {
            presentSimulationResultCalled = true
        }
    }
    
    // MARK: Tests
    
    func testSimulationResultShouldAskPresenterToFormatResult()
    {
        // Given
        let presenterSpy = SimulatorResultPresentationLogicSpy()
        sut.presenter = presenterSpy
        
        // When
        sut.getSimulationResult()
        
        // Then
        XCTAssertTrue(presenterSpy.presentSimulationResultCalled, "getSimulationResult() should ask the presenter to format the result")
    }
}
